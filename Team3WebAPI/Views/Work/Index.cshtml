@model Team3WebAPI.WorkVO
@{
    ViewBag.Title = "Work";
}





<body>


    <section class="content">
        <div class="row">
            <div class="col-md-6">
                <div class="box" style="height:auto">
                    <div class="box-header with-border">
                        <h3 class="box-title">생산 현황</h3>
                    </div>
                    <!-- /.box-header -->
                    <div class="box-body">
                        <table class="table table-bordered">
                            <tr>
                                <th style="width: 10px">#</th>
                                <th>Task</th>
                                <th>Product Name</th>
                                <th>Destination</th>
                                <th>Progress</th>
                                <th style="width: 40px">Label</th>
                            </tr>
                            @foreach (var item in Model.WorkRateList)
                            {
                                <tr>
                                    <td>@item.row</td>
                                    <td>@item.plan_id</td>
                                    <td>@item.product_name</td>
                                    <td>@item.company_code</td>

                                    <td>
                                        <div class="progress progress-xs">
                                            @if (Convert.ToDouble(item.rate) > 50)
                                            {
                                                <div class="progress-bar progress-bar-aqua" style="width:@item.rate%"></div>
                                            }
                                            else
                                            {
                                                <div class="progress-bar progress-bar-danger" style="width:@item.rate%"></div>
                                            }

                                        </div>
                                    </td>
                                    <td>
                                        @if (Convert.ToDouble(item.rate) > 50)
                                        {
                                            <span class="badge bg-aqua">@item.rate%</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-red">@item.rate%</span>
                                        }
                                    </td>
                                </tr>
                            }

                        </table>
                    </div>
                    <!-- /.box-body -->

                </div>
                <!-- /.box -->

                <div class="box">
                    <div class="box-header">
                        <h3 class="box-title">금일 작업 현황</h3>
                    </div>
                    <!-- /.box-header -->
                    <div class="box-body no-padding">
                        <table class="table ">
                            <tr>
                                <th style="width: 10px">#</th>
                                <th>Task</th>
                                <th>Progress</th>
                                <th style="width: 40px">Label</th>
                            </tr>
                            @foreach (var item in Model.TodayWorkList)
                            {
                                <tr>
                                    <td>@item.row</td>
                                    <td>@item.bor_comment</td>

                                    @if (Convert.ToDouble(item.rate) > 50)
                                    {
                                        <td>
                                            <div class="progress progress-xs">
                                                <div class="progress-bar progress-bar-info" style="width:@item.rate%"></div>
                                            </div>
                                        </td>
                                        <td><span class="badge bg-aqua">@item.rate%</span></td>
                                    }
                                    else
                                    {
                                        <td>
                                            <div class="progress progress-xs">
                                                <div class="progress-bar progress-bar-danger" style="width:@item.rate%"></div>
                                            </div>
                                        </td>
                                        <td><span class="badge bg-red">@item.rate%</span></td>
                                    }

                                </tr>
                            }
                        </table>
                    </div>
                    <!-- /.box-body -->
                </div>
                <!-- /.box -->
            </div>

            <div class="col-md-6">
                <div class="box box-success">
                    <div class="box-header with-border">
                        <h3 class="box-title">@DateTime.Now.ToString("yyyy") 생산 RANK(hour)</h3>

                        <div class="box-tools pull-right">
                            <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                <i class="fa fa-minus"></i>
                            </button>
                            <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                        </div>
                    </div>
                    <div class="box-body">
                        <div class="chart">
                            <canvas id="barChart" style="height:230px"></canvas>
                        </div>
                    </div>
                    <!-- /.box-body -->
                </div>
            </div>
            <!-- /.box -->
            <!-- /.col -->
            <div class="col-md-6">
                <div class="box">
                    <div class="box-header">
                        <h3 class="box-title">비가동 TOP 3</h3>


                    </div>
                    <!-- /.box-header -->
                    <div class="box-body no-padding">
                        <table class="table">
                            <tr>
                                <th style="width: 10px">#</th>
                                <th>Task</th>
                                <th>Progress</th>
                                <th style="width: 40px">Label</th>
                            </tr>
                            @foreach (var item in Model.UnWorkingList)
                            {
                                <tr>
                                    <td>@item.row</td>
                                    <td>@item.w_comment</td>
                                    <td>
                                        <div class="progress progress-xs">
                                            <div class="progress-bar progress-bar-danger" style="width:@item.rate%"></div>
                                        </div>
                                    </td>
                                    <td><span class="badge bg-red">@item.rate%</span></td>
                                </tr>
                            }


                        </table>
                    </div>
                    <!-- /.box-body -->
                </div>
                <!-- /.box -->
                <!-- /.box -->
            </div>
            <!-- /.col -->
        </div>
        <!-- /.row -->
        <div class="row">
            <div class="col-xs-12">
                <div class="box">
                    <div class="box-header">
                        <h3 class="box-title">금일 라인 비가동 현황</h3>

                        <div class="box-tools">
                            <div class="input-group input-group-sm hidden-xs" style="width: 150px;">
                                <input type="text" name="table_search" class="form-control pull-right" placeholder="Search">

                                <div class="input-group-btn">
                                    <button type="submit" class="btn btn-default"><i class="fa fa-search"></i></button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- /.box-header -->
                    <div class="box-body table-responsive no-padding">
                        <table class="table table-hover">
                            <tr>
                                <th style="text-align:center">Machine ID</th>
                                <th>Machine Name</th>
                                <th>Date</th>
                                <th style="text-align:center">Stop Time(Min)</th>
                                <th>Reason</th>
                            </tr>
                            @foreach (var item in Model.TodayUnworkData)
                            {
                                <tr>
                                    <td style="text-align:center">@item.m_id</td>
                                    <td>@item.m_name</td>
                                    <td>@item.w_edate</td>
                                    <td><p style="text-align:center">@item.min</p></td>
                                    <td>@item.w_comment</td>
                                </tr>
                            }


                        </table>
                    </div>
                    <!-- /.box-body -->
                </div>
                <!-- /.box -->
            </div>
        </div>
    </section>


</body>


@{
    string labels = ViewBag.Name;
    string label1 = ViewBag.Label1;
    string data1 = ViewBag.Data;
    string label2 = ViewBag.Label2;


    string label3 = ViewBag.Label3;


}


@section Scripts {
    <script>
            $(document).ready(function () {
            /* ChartJS
             * -------
             * Here we will create a few charts using ChartJS
             */

            //--------------
            //- AREA CHART -
            //--------------

            // Get context with jQuery - using jQuery's .get() method.
            var areaChartCanvas = $('#barChart').get(0).getContext('2d')
                // This will get the first returned node in the jQuery collection.
                var areaChart = new Chart(areaChartCanvas)


                var temp = "@labels";
                var arrTemp = temp.split(',');

                var areaChartData = {

                labels: arrTemp,
                    datasets: [
                    {
                        label: '1',
                        fillColor: 'rgba(210, 214, 100, 15)',
                        strokeColor: 'rgba(210, 214, 100, 15)',
                        pointColor: 'rgba(210, 214, 100, 15)',
                        pointStrokeColor: '#c1c7d1',
                        pointHighlightFill: '#fff',
                        pointHighlightStroke: 'rgba(220,220,220,1)',
                        data: @data1
                    }
                    ]
            }

            var areaChartOptions = {
                //Boolean - If we should show the scale at all
                showScale: true,
                //Boolean - Whether grid lines are shown across the chart
                scaleShowGridLines: false,
                //String - Colour of the grid lines
                scaleGridLineColor: 'rgba(0,0,0,.05)',
                //Number - Width of the grid lines
                scaleGridLineWidth: 1,
                //Boolean - Whether to show horizontal lines (except X axis)
                scaleShowHorizontalLines: true,
                //Boolean - Whether to show vertical lines (except Y axis)
                scaleShowVerticalLines: true,
                //Boolean - Whether the line is curved between points
                bezierCurve: true,
                //Number - Tension of the bezier curve between points
                bezierCurveTension: 0.3,
                //Boolean - Whether to show a dot for each point
                pointDot: false,
                //Number - Radius of each point dot in pixels
                pointDotRadius: 4,
                //Number - Pixel width of point dot stroke
                pointDotStrokeWidth: 1,
                //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
                pointHitDetectionRadius: 10,
                //Boolean - Whether to show a stroke for datasets
                datasetStroke: true,
                //Number - Pixel width of dataset stroke
                datasetStrokeWidth: 1,
                //Boolean - Whether to fill the dataset with a color
                datasetFill: true,
                //String - A legend template
                legendTemplate: '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].lineColor%>"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>',
                //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
                maintainAspectRatio: true,
                //Boolean - whether to make the chart responsive to window resizing
                responsive: true
            }

            ////Create the line chart
            //areaChart.Line(areaChartData, areaChartOptions)

            //-------------
            //- LINE CHART -
            ////--------------
            //var lineChartCanvas = $('#lineChart').get(0).getContext('2d')
            //    var lineChart = new Chart(lineChartCanvas)
            //    var lineChartOptions = areaChartOptions.scaleShowHorizontalLines

            //lineChartOptions.datasetFill = false
            //lineChart.Line(areaChartData, lineChartOptions)

            ////-------------
            ////- PIE CHART -
            ////-------------
            //// Get context with jQuery - using jQuery's .get() method.
            //var pieChartCanvas = $('#pieChart').get(0).getContext('2d')
            //var pieChart = new Chart(pieChartCanvas)
            //var PieData = [
            //    {
            //        value: 700,
            //        color: '#f56954',
            //        highlight: '#f56954',
            //        label: 'Chrome'
            //    },
            //    {
            //        value: 500,
            //        color: '#00a65a',
            //        highlight: '#00a65a',
            //        label: 'IE'
            //    },
            //    {
            //        value: 400,
            //        color: '#f39c12',
            //        highlight: '#f39c12',
            //        label: 'FireFox'
            //    },
            //    {
            //        value: 600,
            //        color: '#00c0ef',
            //        highlight: '#00c0ef',
            //        label: 'Safari'
            //    },
            //    {
            //        value: 300,
            //        color: '#3c8dbc',
            //        highlight: '#3c8dbc',
            //        label: 'Opera'
            //    },
            //    {
            //        value: 100,
            //        color: '#d2d6de',
            //        highlight: '#d2d6de',
            //        label: 'Navigator'
            //    }
            //]
            //var pieOptions = {
            //    //Boolean - Whether we should show a stroke on each segment
            //    segmentShowStroke: true,
            //    //String - The colour of each segment stroke
            //    segmentStrokeColor: '#fff',
            //    //Number - The width of each segment stroke
            //    segmentStrokeWidth: 2,
            //    //Number - The percentage of the chart that we cut out of the middle
            //    percentageInnerCutout: 50, // This is 0 for Pie charts
            //    //Number - Amount of animation steps
            //    animationSteps: 100,
            //    //String - Animation easing effect
            //    animationEasing: 'easeOutBounce',
            //    //Boolean - Whether we animate the rotation of the Doughnut
            //    animateRotate: true,
            //    //Boolean - Whether we animate scaling the Doughnut from the centre
            //    animateScale: false,
            //    //Boolean - whether to make the chart responsive to window resizing
            //    responsive: true,
            //    // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
            //    maintainAspectRatio: true,
            //    //String - A legend template
            //    legendTemplate: '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<segments.length; i++){%><li><span style="background-color:<%=segments[i].fillColor%>"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>'
            //}
            ////Create pie or douhnut chart
            //// You can switch between pie and douhnut using the method below.
            //pieChart.Doughnut(PieData, pieOptions)

            //-------------
            //- BAR CHART -
            //-------------
            var barChartCanvas = $('#barChart').get(0).getContext('2d')
            var barChart = new Chart(barChartCanvas)
            var barChartData = areaChartData
            barChartData.datasets[0].fillColor = '#FF9400D3'
            barChartData.datasets[0].strokeColor = '#FF9400D3'
            barChartData.datasets[0].pointColor = '#FF9400D3'
                var barChartOptions = {
                
                //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value
                scaleBeginAtZero: true,
                //Boolean - Whether grid lines are shown across the chart
                scaleShowGridLines: true,
                //String - Colour of the grid lines
                scaleGridLineColor: 'rgba(0,0,0,.05)',
                //Number - Width of the grid lines
                scaleGridLineWidth: 1,
                //Boolean - Whether to show horizontal lines (except X axis)
                scaleShowHorizontalLines: true,
                //Boolean - Whether to show vertical lines (except Y axis)
                scaleShowVerticalLines: true,
                //Boolean - If there is a stroke on each bar
                barShowStroke: true,
                //Number - Pixel width of the bar stroke
                barStrokeWidth: 2,
                //Number - Spacing between each of the X value sets
                barValueSpacing: 5,
                //Number - Spacing between data sets within X values
                barDatasetSpacing: 1,
                //String - A legend template
                legendTemplate: '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].fillColor%>"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>',
                //Boolean - whether to make the chart responsive
                responsive: true,
                maintainAspectRatio: true
                }
                
                barChartOptions.datasetFill = false; 
                barChart.Bar(barChartData, barChartOptions)

        })
    </script>
}
